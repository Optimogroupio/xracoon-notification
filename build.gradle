plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'com.google.cloud.tools.jib' version '3.2.1'
}

group = 'io.optimogroup.xracoon'
version = '0.0.2-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'com.sendgrid:sendgrid-java:4.0.1'
//	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
	implementation group: 'com.googlecode.log4jdbc', name: 'log4jdbc', version: '1.2'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.9'
	implementation group: 'biz.paluch.logging', name: 'logstash-gelf', version: '1.15.0'
	implementation group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.36'
	implementation group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.36'
	implementation group: 'net.javacrumbs.shedlock', name: 'shedlock-spring', version: '4.37.0'
	implementation group: 'net.javacrumbs.shedlock', name: 'shedlock-provider-jdbc-template', version: '4.37.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.hibernate:hibernate-jpamodelgen'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation group: 'com.squareup.retrofit2', name: 'converter-jackson', version: '2.9.0'
	implementation group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '4.10.0'
	implementation group: 'com.squareup.okhttp', name: 'okhttp', version: '2.7.5'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
}

tasks.named('test') {
	useJUnitPlatform()
}

def getDockerLoginCommand = {
	def ecrStdOut = new ByteArrayOutputStream()
	exec {
		//commandLine
		commandLine 'aws', 'ecr', 'get-login-password','--profile','shako'
		standardOutput = ecrStdOut
	}
	final String dockerLoginCommand = ecrStdOut.toString()
	return dockerLoginCommand
}

jib {
	to {
		image = "395521588212.dkr.ecr.eu-central-1.amazonaws.com/xracoon-notification"
		auth {
			username = "AWS"
			password = getDockerLoginCommand()
		}
		tags = [project.version]
	}
}


